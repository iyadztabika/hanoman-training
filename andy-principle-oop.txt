//Encapsulation//
<?php

// implements encapsulation
class Refund {

	private $brg;
	private $idplg;
	
	// Update Login password
	public function updateRefund($brg, $idplg) {
		
		// Write function body
		echo("Anda Berhasil merefund "
				. $idplg . "' untuk id pelanggan " . $brg);
		
		echo "<br>";
	}

	// Check account balance
	public function courseName($brg) {
		
		// Write function body
		echo("Silahkan untuk memilih kembali "
				. $brg);
                echo ("anda");
		
		echo "<br>";
	}
}

$echo = new Refund();
$echo -> updateRefund('12180346', 'tv lcd');
$echo -> courseName('tv lcd ');

?>

//--------------------------------------------------------------------------------------------------//
Abstraction

<?php
// Parent class
abstract class Car {
  public $name;
  public function __construct($name) {
    $this->name = $name;
  }
  abstract public function intro() : string; 
}

// Child classes
class Audi extends Car {
  public function intro() : string {
    return "Choose German quality! I'm an $this->name!"; 
  }
}

class Volvo extends Car {
  public function intro() : string {
    return "Proud to be Swedish! I'm a $this->name!"; 
  }
}

class Citroen extends Car {
  public function intro() : string {
    return "French extravagance! I'm a $this->name!"; 
  }
}

// Create objects from the child classes
$audi = new audi("Audi");
echo $audi->intro();
echo "<br>";

$volvo = new volvo("Volvo");
echo $volvo->intro();
echo "<br>";

$citroen = new citroen("Citroen");
echo $citroen->intro();
?>

//--------------------------------------------------------------------------------------------------//
Inheritance
<?php
class Fruit {
  public $name;
  public $color;
  public function __construct($name, $color) {
    $this->name = $name;
    $this->color = $color; 
  }
  public function intro() {
    echo "The fruit is {$this->name} and the color is {$this->color}."; 
  }
}

// Strawberry is inherited from Fruit
class Strawberry extends Fruit {
  public function message() {
    echo "Am I a fruit or a berry? "; 
  }
}

$strawberry = new Strawberry("Strawberry", "red");
$strawberry->message();
$strawberry->intro();
?>

//--------------------------------------------------------------------------------------------------//
polymorphism
