- What is Object-Oriented Programming
//answer
Procedural programming is about writing procedures or functions that perform operations on the data, while object-oriented programming is about creating objects that contain both data and functions.

- What is the structure of Object-Oriented Programming
  - Classes
  //answer
  in oop there is the term class, class is the blueprint for the created object.

  - Objects
  //answer
  An object is a real-world entity that has attributes, behavior, and properties. It is referred to as an instance of the class.

  - Methods
  //answer
   A method is a collection of statements that perform some specific task and return the result to the caller. A method can perform some specific task without returning anything.

  - Attributes
  //answer
  Attributes are part of a class that is still closely related to that class. Attributes can also be referred to as properties or properties of a class.

- What are the main principles of Object-Oriented Programming
  - Encapsulation
  //answer
  Encapsulation is a mechanism that allows us to bind data and functions of a class into an entity. It protects data and functions from outside interference and misuse. Therefore, it also provides security. A class is the best example of encapsulation.

  - Abstraction
  //answer 
  The concept allows us to hide the implementation from the user but shows only essential information to the user. Using the concept developer can easily make changes and added over time.

  - Inheritance
  //answer
  The concept allows us to inherit or acquire the properties of an existing class (parent class) into a newly created class (child class). It is known as inheritance. It provides code reusability.

  - Polymorphism
  //answer
  The word polymorphism is derived from the two words i.e. ploy and morphs. Poly means many and morphs means forms. It allows us to create methods with the same name but different method signatures. It allows the developer to create clean, sensible, readable, and resilient code.